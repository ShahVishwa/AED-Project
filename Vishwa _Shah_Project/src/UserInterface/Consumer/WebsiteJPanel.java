/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Consumer;

import Business.Business.EcoSystem;
import Business.Employee.Consumer;
import Business.Employee.Employee;
import Business.Employee.Publisher;
import Business.Enterprise.Enterprise;
import Business.Enterprise.PublisherEnterprise;
import Business.Network.Network;
import Business.Organization.ConsumerOrganization;
import Business.Organization.Organization;
import Business.Organization.WebsiteOrganization;
import Business.Publisher.Page;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PublisherWorkRequest;
import UserInterface.Publisher.ConsumerClickWorkRequestJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vishwa
 */
public class WebsiteJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private EcoSystem system;
    private UserAccount account;
    private Consumer consumer;
    private Organization ConsumerOrganization;


    /**
     * Creates new form GoJPanel
     */
    public WebsiteJPanel(JPanel userProcessContainer,EcoSystem system,UserAccount account,Consumer consumer,Organization org) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.account = account;
        this.consumer = consumer;
        this.ConsumerOrganization = (ConsumerOrganization)org;
        populateComboBox();
    }
    
    private void populateComboBox()
    {
        publisherJComboBox.removeAllItems();
        for(Network network : system.getNetworklist())
        {
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriselist())
            {
                if(enterprise instanceof PublisherEnterprise)
                {
                    for(Organization org : enterprise.getOrganizationDirectory().getOrganizationlist())
                    {
                        for(Employee employee : org.getEmployeeDirectory().getEmployeelist())
                        {
                            if(employee instanceof Publisher)
                            {
                               Publisher p = (Publisher)employee;
                               publisherJComboBox.addItem(p); 
                            }
                            
                        }
                    }
                }
            }
        }
    }
    
    private void populateTable(Publisher p)
    {
        DefaultTableModel dtm = (DefaultTableModel)publisherJTable.getModel();
        dtm.setRowCount(0);
        for(Page page : p.getPageCatalog().getPageList())
        {
            Object[] row = new Object[2];
            row[0] = page;
            row[1] = page.getPageID();
            dtm.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        publisherJLabel = new javax.swing.JLabel();
        publisherJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        publisherJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        goJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));

        publisherJLabel.setText("Publisher");
        publisherJLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));

        publisherJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        publisherJComboBox.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        publisherJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherJComboBoxActionPerformed(evt);
            }
        });

        publisherJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Page Name", "Page ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(publisherJTable);

        backJButton.setText("<< Back");
        backJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        goJButton.setText("Go >>");
        goJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        goJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(publisherJLabel)
                                    .addGap(62, 62, 62)
                                    .addComponent(publisherJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(backJButton))
                            .addGap(169, 169, 169)))
                    .addComponent(goJButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publisherJLabel)
                    .addComponent(publisherJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(goJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        ((CardLayout)userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void publisherJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherJComboBoxActionPerformed
        Publisher publisher = (Publisher)publisherJComboBox.getSelectedItem();
        if(publisher != null)
        {
            populateTable(publisher);
        }
    }//GEN-LAST:event_publisherJComboBoxActionPerformed

    private void goJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goJButtonActionPerformed
        int selectRow = publisherJTable.getSelectedRow();
        
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the Table");
            return;
        }
        
        Page page = (Page)publisherJTable.getValueAt(selectRow, 0);
        if(page.isSpace() == false)
        {
            
            OutputJPanel ojp = new OutputJPanel(userProcessContainer,ConsumerOrganization);
            userProcessContainer.add("OutputJPanel", ojp);
            ((CardLayout) userProcessContainer.getLayout()).next(userProcessContainer);
        }
        
        if(page.isSpace() == true)
        {
            PublisherWorkRequest pwr = new PublisherWorkRequest();
            pwr.setSender(account); 
            pwr.setConsumer(consumer);
            pwr.setPage(page);
            pwr.setRequest(true);
        for(Network network : system.getNetworklist())
        {
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriselist())
            {
                if(enterprise instanceof PublisherEnterprise)
                {
                    for(Organization org : enterprise.getOrganizationDirectory().getOrganizationlist())
                    {
                        if(org instanceof WebsiteOrganization)
                        {
                        for(UserAccount account : org.getUserAccountDirectory().getUserAccountList()){
                            Publisher p = (Publisher)account.getEmployee();
                            Publisher publisher = (Publisher)publisherJComboBox.getSelectedItem();
                            
                            if(p == publisher)
                            {
                                pwr.setReceiver(account);
                            }
                        org.getWorkQueue().getWorkRequestList().add(pwr);
                        account.getWorkQueue().getWorkRequestList().add(pwr);
                        ConsumerClickWorkRequestJPanel ccwrjp = new ConsumerClickWorkRequestJPanel(userProcessContainer, account, org, publisher, system); 
                        userProcessContainer.add("ConsumerClickWorkRequestJPanel", ccwrjp);
                        ((CardLayout) userProcessContainer.getLayout()).next(userProcessContainer);
        }
                        }
                    }
                }
            }
        }
        
        
        
        
//        OutputJPanel ojp = new OutputJPanel(userProcessContainer);
//        userProcessContainer.add("OutputJPanel", ojp);
//        ((CardLayout) userProcessContainer.getLayout()).next(userProcessContainer);
        }
    }//GEN-LAST:event_goJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton goJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox publisherJComboBox;
    private javax.swing.JLabel publisherJLabel;
    private javax.swing.JTable publisherJTable;
    // End of variables declaration//GEN-END:variables
}
