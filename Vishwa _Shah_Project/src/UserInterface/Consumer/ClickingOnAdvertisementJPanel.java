/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Consumer;

import Business.Ad.Product;
import Business.Business.EcoSystem;
import Business.Employee.Advertiser;
import Business.Employee.Consumer;
import Business.Employee.Employee;
import Business.Enterprise.AdvertiserEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vishwa
 */
public class ClickingOnAdvertisementJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private EcoSystem system;
    private Consumer consumer;

    /**
     * Creates new form ClickingOnAdvetisementJPanel
     */
    public ClickingOnAdvertisementJPanel(JPanel userProcessContainer,EcoSystem system,Consumer consumer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.consumer = consumer;
        populateComboBox();
    }
    
    private void populateComboBox() {
        advertiserJComboBox.removeAllItems();
        for (Network network : system.getNetworklist()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriselist()) {
                if (enterprise instanceof AdvertiserEnterprise) {
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationlist()) {
                        for (Employee employee : org.getEmployeeDirectory().getEmployeelist()) {
                            if (employee instanceof Advertiser) {
                            Advertiser adv = (Advertiser) employee;
                            advertiserJComboBox.addItem(adv);
                            }
                        }
                    }
                }
            }
        }
    }
    
    private void populateTable(Advertiser advertiser)
    {
        DefaultTableModel dtm = (DefaultTableModel) adJTable.getModel();
        dtm.setRowCount(0);
        for(Product product : advertiser.getProductCatalog().getProductList())
        {
            if(product.isAdvertisement() == true)
            {
                Object[] row = new Object[3];
                row[0] = product;
                row[1] = product.getAd();
                row[2] = product.getAd().getAdID();
                dtm.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        advertiserJLabel = new javax.swing.JLabel();
        advertiserJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        adJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        clickOnAdJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));

        advertiserJLabel.setText("Advertiser:");
        advertiserJLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));

        advertiserJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        advertiserJComboBox.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        advertiserJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advertiserJComboBoxActionPerformed(evt);
            }
        });

        adJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Product Name", "Ad Name", "Ad ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(adJTable);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        clickOnAdJButton.setText("Click On Ad");
        clickOnAdJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        clickOnAdJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickOnAdJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clickOnAdJButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(advertiserJLabel)
                            .addGap(60, 60, 60)
                            .addComponent(advertiserJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(advertiserJLabel)
                    .addComponent(advertiserJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(clickOnAdJButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void advertiserJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advertiserJComboBoxActionPerformed
        Advertiser advertiser = (Advertiser) advertiserJComboBox.getSelectedItem();
        if (advertiser != null) {
            populateTable(advertiser);
        }
    }//GEN-LAST:event_advertiserJComboBoxActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void clickOnAdJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickOnAdJButtonActionPerformed
        int selectRow = adJTable.getSelectedRow();
        
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the Table");
            return;
        }
        
        Product p = (Product)adJTable.getValueAt(selectRow, 0);
        consumer.getUp().getClickOnAd();
    }//GEN-LAST:event_clickOnAdJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adJTable;
    private javax.swing.JComboBox advertiserJComboBox;
    private javax.swing.JLabel advertiserJLabel;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton clickOnAdJButton;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
