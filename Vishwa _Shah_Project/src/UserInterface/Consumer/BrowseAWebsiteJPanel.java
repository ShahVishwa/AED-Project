/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Consumer;

import Business.Ad.Product;
import Business.Business.EcoSystem;
import Business.Employee.Advertiser;
import Business.Employee.Consumer;
import Business.Employee.Employee;
import Business.Enterprise.AdvertiserEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vishwa
 */
public class BrowseAWebsiteJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Consumer consumer;
    private EcoSystem system;

    /**
     * Creates new form BrowseAWebsiteJPanel
     */
    public BrowseAWebsiteJPanel(JPanel userProcessContainer, Consumer consumer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.consumer = consumer;
        this.system = system;
        populateComboBox();
    }

    private void populateComboBox() {
        advertiserJComboBox.removeAllItems();
        for (Network network : system.getNetworklist()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriselist()) {
                if (enterprise instanceof AdvertiserEnterprise) {
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationlist()) {
                        for (Employee employee : org.getEmployeeDirectory().getEmployeelist()) {
                            if (employee instanceof Advertiser) {
                            Advertiser adv = (Advertiser) employee;
                            advertiserJComboBox.addItem(adv);
                            }
                        }
                    }
                }
            }
        }
    }

    private void populateTable(Advertiser advertiser) {
        DefaultTableModel dtm = (DefaultTableModel) browsingJTable.getModel();
        dtm.setRowCount(0);
        for (Product product : advertiser.getProductCatalog().getProductList()) {
            Object[] row = new Object[4];
            row[0] = product;
            row[1] = product.getModelNumber();
            row[2] = product.getPrice();
            row[3] = product.getAvail();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        advertiserJLabel = new javax.swing.JLabel();
        advertiserJComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        browsingJTable = new javax.swing.JTable();
        buyJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        viewJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));

        advertiserJLabel.setText("Advertiser:");
        advertiserJLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));

        advertiserJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        advertiserJComboBox.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        advertiserJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                advertiserJComboBoxActionPerformed(evt);
            }
        });

        browsingJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product Name", "Product ID", "Price", "Availability"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(browsingJTable);

        buyJButton.setText("Buy");
        buyJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        buyJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyJButtonActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        viewJButton.setText("View");
        viewJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        viewJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(advertiserJLabel)
                        .addGap(60, 60, 60)
                        .addComponent(advertiserJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 389, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addGap(184, 184, 184)
                        .addComponent(viewJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buyJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(advertiserJLabel)
                    .addComponent(advertiserJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(buyJButton)
                    .addComponent(viewJButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void advertiserJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_advertiserJComboBoxActionPerformed
        Advertiser advertiser = (Advertiser) advertiserJComboBox.getSelectedItem();
        if (advertiser != null) {
            populateTable(advertiser);
        }
    }//GEN-LAST:event_advertiserJComboBoxActionPerformed

    private void buyJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyJButtonActionPerformed
        int selectRow = browsingJTable.getSelectedRow();

        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the Table");
            return;
        }

        Product product = (Product) browsingJTable.getValueAt(selectRow, 0);

//        consumer.getProduct().setName(product.getName()); // Doubt
        Advertiser advertiser = (Advertiser) advertiserJComboBox.getSelectedItem();
        consumer.getUp().getBuyOnClick();
    }//GEN-LAST:event_buyJButtonActionPerformed

    private void viewJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButtonActionPerformed
        int selectRow = browsingJTable.getSelectedRow();

        if (selectRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the Table");
            return;
        }

        Product product = (Product) browsingJTable.getValueAt(selectRow, 0);
//        consumer.getProduct().setName(product.getName()); // Doubt
        consumer.getUp().getOnClick();
    }//GEN-LAST:event_viewJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox advertiserJComboBox;
    private javax.swing.JLabel advertiserJLabel;
    private javax.swing.JButton backJButton;
    private javax.swing.JTable browsingJTable;
    private javax.swing.JButton buyJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewJButton;
    // End of variables declaration//GEN-END:variables
}
