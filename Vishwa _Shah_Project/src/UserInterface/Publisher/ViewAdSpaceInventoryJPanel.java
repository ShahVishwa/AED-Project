/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Publisher;

import Business.Employee.Publisher;
import Business.Publisher.Page;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vishwa
 */
public class ViewAdSpaceInventoryJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer; 
    private Publisher publisher;

    /**
     * Creates new form ViewAdInventoryJPanel
     */
    public ViewAdSpaceInventoryJPanel(JPanel userProcessContainer,Publisher publisher) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.publisher = publisher;
        populateTable();
    }
    
    private void populateTable()
    {
        DefaultTableModel dtm = (DefaultTableModel)adSpaceInventoryJTable.getModel();
        dtm.setRowCount(0);
        for(Page page : publisher.getPageCatalog().getPageList())
        {
            if(page.isSpace() == true)
            {
                Object[] row = new Object[3];
                row[0] = page;
                row[1] = page.getAdSpace().getHeight();
                row[2] = page.getAdSpace().getBreadth();
                dtm.addRow(row);
            }
            else if(page.isSpace() == false)
            {
                Object[] row = new Object[3];
                row[0] = page;
                row[1] = "No Space";
                row[2] = "No Space";
                dtm.addRow(row);
            }
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        adSpaceInventoryJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        removeJButton = new javax.swing.JButton();
        editJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));

        adSpaceInventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Page Name", "Height", "Breadth"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(adSpaceInventoryJTable);

        backJButton.setText("<< Back");
        backJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        removeJButton.setText("Remove");
        removeJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        removeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeJButtonActionPerformed(evt);
            }
        });

        editJButton.setText("Edit");
        editJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        editJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setText("Refresh");
        refreshJButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 204)));
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton)
                        .addGap(40, 40, 40)
                        .addComponent(editJButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshJButton)
                        .addGap(31, 31, 31)
                        .addComponent(removeJButton)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backJButton)
                    .addComponent(removeJButton)
                    .addComponent(editJButton)
                    .addComponent(refreshJButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        ((CardLayout)userProcessContainer.getLayout()).previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void removeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJButtonActionPerformed
        int selectRow = adSpaceInventoryJTable.getSelectedRow();
        
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the Table");
            return;
        }
        int selectedValue = JOptionPane.showConfirmDialog(null, "Are you sure you want to remove? ","Warning",JOptionPane.YES_NO_OPTION);
        if(selectedValue == JOptionPane.NO_OPTION)
        {
            return;
        }
        else
        {
            Page page = (Page)adSpaceInventoryJTable.getValueAt(selectRow, 0);
            publisher.getPageCatalog().removePage(page);
            publisher.getAdSpaceInventory().removeAdSpace();
            populateTable();
        }
    }//GEN-LAST:event_removeJButtonActionPerformed

    private void editJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editJButtonActionPerformed
        int selectRow = adSpaceInventoryJTable.getSelectedRow();
        
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the Table");
            return;
        }
        else
        {
            Page page = (Page)adSpaceInventoryJTable.getValueAt(selectRow, 0);
            EditPageJPanel epjp = new EditPageJPanel(userProcessContainer, publisher, page);
            userProcessContainer.add("EditPageJPanel", epjp);
            ((CardLayout) userProcessContainer.getLayout()).next(userProcessContainer);
        }
    }//GEN-LAST:event_editJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable adSpaceInventoryJTable;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton editJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton removeJButton;
    // End of variables declaration//GEN-END:variables
}
